[{"/home/hussamkhatib/projects/hashnode-hackathon/src/index.js":"1","/home/hussamkhatib/projects/hashnode-hackathon/src/reportWebVitals.js":"2","/home/hussamkhatib/projects/hashnode-hackathon/src/App.js":"3","/home/hussamkhatib/projects/hashnode-hackathon/src/components/Editor/TextEditor.js":"4","/home/hussamkhatib/projects/hashnode-hackathon/src/components/Wrapper.js":"5","/home/hussamkhatib/projects/hashnode-hackathon/src/components/Nav.js":"6","/home/hussamkhatib/projects/hashnode-hackathon/src/components/hierarchy/HierarchyWrapper.js":"7","/home/hussamkhatib/projects/hashnode-hackathon/src/components/hierarchy/Folder.js":"8","/home/hussamkhatib/projects/hashnode-hackathon/src/components/hierarchy/File.js":"9","/home/hussamkhatib/projects/hashnode-hackathon/src/components/Header.js":"10"},{"size":500,"mtime":1612341159939,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1612341159951,"results":"13","hashOfConfig":"12"},{"size":213,"mtime":1612707052866,"results":"14","hashOfConfig":"12"},{"size":3037,"mtime":1612710964596,"results":"15","hashOfConfig":"12"},{"size":2250,"mtime":1612706865205,"results":"16","hashOfConfig":"12"},{"size":1706,"mtime":1612707998691,"results":"17","hashOfConfig":"12"},{"size":849,"mtime":1612708196478,"results":"18","hashOfConfig":"12"},{"size":237,"mtime":1612706895035,"results":"19","hashOfConfig":"12"},{"size":484,"mtime":1612706071814,"results":"20","hashOfConfig":"12"},{"size":365,"mtime":1612708027004,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1dz7r3q",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/hussamkhatib/projects/hashnode-hackathon/src/index.js",[],["44","45"],"/home/hussamkhatib/projects/hashnode-hackathon/src/reportWebVitals.js",[],"/home/hussamkhatib/projects/hashnode-hackathon/src/App.js",[],"/home/hussamkhatib/projects/hashnode-hackathon/src/components/Editor/TextEditor.js",["46"],"/home/hussamkhatib/projects/hashnode-hackathon/src/components/Wrapper.js",["47"],"import React,{ useState } from 'react'\nimport styled from 'styled-components'\nimport TextEditor from './Editor/TextEditor'\nimport Nav from './Nav'\n\nconst Container = styled.div`\ndisplay: grid;\nwidth:100vw;\ngrid-template-columns: 40vw 1fr;\n`\n\nconst Wrapper = () => {\n    const [textAreaVal,setTextAreaVal] = useState('.')\n    const [titleArr,setTitleArr] = useState(Array.from({length:3}).map(()=>['Untitled','Untitled']))\n    const [foldersNames,setFolderNames] = useState(['general','school','meeting'])\n\n    function handleChange2(e){\n        const cur = e.target.value\n        if(cur === '' ){\n            setTextAreaVal('.') \n            setTitleArr([titleArr[activeNote[0]][activeNote[1]] ='Untitled',...titleArr].slice(1))\n        }else{    \n            setTextAreaVal(cur)  \n            setTitleArr([titleArr[activeNote[0]][activeNote[1]] = cur,...titleArr].slice(1))\n        }\n        }\n    const [value, setValue] = useState([\n        {\n          type: 'paragraph',\n          children: [{ text: 'A line of text in a paragraph.' }],\n        },\n      ])\n    const [notes,setNotes] = useState(Array.from({length:3}).map(()=> [value,value]))\n    const [activeNote,setActiveNote] = useState([0,0])  \n    \n    function handleChange3 (value) { \n        setValue(value)\n        setNotes([notes[activeNote[0]][activeNote[1]]=value,...notes].slice(1)) \n    }\n\n    function setFolderIndex (index) {\n        setActiveNote([index,0])\n        setValue(notes[index][0])\n    }\n    function setFileIndex(index){\n        setActiveNote([activeNote[0],index])\n        setValue(notes[activeNote[0]][index])\n    }\n\n    return (\n        <Container>\n            <Nav \n                FolderActive={activeNote[0]} \n                FileActive={activeNote[1]} \n                setFolderIndex={setFolderIndex}\n                setFileIndex={setFileIndex}\n                FolderName = {foldersNames}\n                Heading= {titleArr[activeNote[0]]}\n                WriteUp = {notes[activeNote[0]]}\n            />\n            <TextEditor\n                textAreaVal={textAreaVal}\n                handleChange2={handleChange2} \n                value={value}\n                handleChange3={handleChange3}/>            \n        </Container>\n    )\n}\n\nexport default Wrapper\n","/home/hussamkhatib/projects/hashnode-hackathon/src/components/Nav.js",[],"/home/hussamkhatib/projects/hashnode-hackathon/src/components/hierarchy/HierarchyWrapper.js",[],"/home/hussamkhatib/projects/hashnode-hackathon/src/components/hierarchy/Folder.js",[],"/home/hussamkhatib/projects/hashnode-hackathon/src/components/hierarchy/File.js",[],"/home/hussamkhatib/projects/hashnode-hackathon/src/components/Header.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":33,"nodeType":"54","messageId":"55","endLine":1,"endColumn":41},{"ruleId":"52","severity":1,"message":"56","line":15,"column":25,"nodeType":"54","messageId":"55","endLine":15,"endColumn":39},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setFolderNames' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]